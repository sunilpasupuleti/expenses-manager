# on:
#   push:
#     branches:
#       - development
# name: ðŸš€ Deploy to VPS
# jobs:
#   web-deploy:
#     name: ðŸŽ‰ Deploy
#     runs-on: ubuntu-latest
#     steps:
#       - name: ðŸšš Get latest code
#         uses: actions/checkout@v3

#       - name: DEPLOY CODE TO VPS
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.HOST_NAME }}
#           username: ${{ secrets.USER_NAME }}
#           password: ${{ secrets.PASS_WORD }}
#           port: ${{ secrets.PORT }}
#           source: ./*
#           target: /root/expenses-manager-dev

#       - name: Run the application
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{secrets.HOST_NAME}}
#           username: ${{secrets.USER_NAME}}
#           password: ${{secrets.PASS_WORD}}
#           port: ${{secrets.PORT}}
#           script: |
#             source ~/.bashrc
#             source ~/.nvm/nvm.sh
#             npm i -g create-react-app
#             cd /root/expenses-manager-dev/web

#             rm .env
#             touch .env
#             echo "${{secrets.DEV_WEB_ENV_FILE}}" | base64 --decode > .env
#             npm i -f
#             npm run build
#             cp -a dist/. /var/www/dev.expensesmanager.app

#             cd ..
#             cp -a graphics/. /var/www/dev.expensesmanager.app/graphics

#             cd backend/

#             rm config/.env
#             rm config/expensesmanager.json

#             touch config/.env
#             touch config/expensesmanager.json

#             echo "${{secrets.DEV_BACKEND_ENV_FILE}}" | base64 --decode > config/.env
#             echo "${{secrets.EXPENSES_MANAGER_JSON}}" | base64 --decode > config/expensesmanager.json

#             cd ..

#             docker compose -f docker-compose.dev.yml up -d --build
